<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="istatistikResmi.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH4wUcAxgi2xbDPwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAOZSURBVHhe
        5Zu5ixRBFMbX+wgUFM/EyAPRTMwU0cADFA8MxFBNFBWMFQRl9Q8wWQMjUbwVQTBUxNDAWxHxBsFbI+/f
        J/2gbLqn3XkzW13tBz92tr6e6vdqeqr6Ve/2NFCDYCNchS8ZV2ADyGu0hsAx+FXCUdAxjdUesGS/wbUM
        vbb23dBIjYJPoCT1cx6Y5sNnkPcRRkLjtBDsU96vhpx6wfwFamiaVoEluEkNOanN/JVqaJrmgiV4QQ05
        nQLz56ihadIS9wgsyeMwNeNg1ibuQCM1E96CJVqEVoPF0Dgp+VdgiX4NXhvvYS0MmKbAClgOk9XQJc2A
        l2CJXgKdexscydgK42BApO/cOfgBFpRenwUF1kkVJT8CoknJPwMLKM9T6NQg1C55SZ+8BXQTdmTcytqE
        rgSvapm8Pn277JV8eLup1zYIOsYzJ9QyeUmTnQW1XQ057QTzl6qhDdU2eWkZWGC67PPqA/Mfg25OFsEw
        CFVWz++C2iYvaXKzr8A7GA0mVWovwIIPUXV2BjbDNGhVzxu61R0OtZJuMsK6+yHoshe3szahgdBNif1e
        RljPh0vqPahV8oNB5edPCBMo4gloAhwKKklVot6A/HuVfFjPq9L7DvJqVc+PgfNggSuRQ1B0I3QaymZ/
        fX0OgB2vrau8alfPzwJdjhaUdmHWgEnJamIUk9RQIW89r70+XYknK9gH7n1BBatL0QJ6ALPBo7CeP6GG
        nKrq+XAVqkLHtiWN3F4Iv7MXYSx4peXvLli/uuT7U8+vBzumCh1bqrJ1eAtcButEg6DANAl2SkvAJrsi
        WtXz4QAUJVjl/1HVvrqhZUylbje0Dj5A0Tlb1fMdGYCyffVwRn8N06GbGg/9refdA9BqXz1ch+XVcV/d
        PQCp76u7ByD1fXX3AHjX4dhyD4B3HY4t9wBInnV4ItyHoveF6PZ5AnRaHRkAqd11WF7+PWV0Y3++YwMg
        edfh65AvQtT2zwG0oaoEq3y3YgcQ+/zRA4h9fncA3nree363vAF463nv+d3yBhD6VXj7L/Ld8gYQ23fL
        G0Bs3y1vALF9t7wBxPbd8gYQ24++Dsf2o6/Dsf2/DqiinRPU3Xd3kLrv7iB1391B6r67g9R9dwep++4O
        UvfdHaTuuztI3Xd3kLrv7iB1391B6r67g9R9dwfJ+vrbPv2HVfjo6g08z6E286sefaXwfuW8GgofhP4v
        6IFvz2Fo9Ui8qZBzT99vee2AUo/G/OkAAAAASUVORK5CYII=
</value>
  </data>
</root>